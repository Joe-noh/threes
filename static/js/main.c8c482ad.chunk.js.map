{"version":3,"sources":["pages/index.tsx","hooks/full-size.ts","pages/basic-geometries.tsx","assets/gltf/suzanne.gltf","lib/loading-screen.ts","pages/suzanne.tsx","pages/clock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Index","style","margin","to","useFullSize","useState","width","setWidth","height","setHeight","useEffect","window","innerWidth","innerHeight","BasicGeometries","antialias","adaptToDeviceRatio","canvasId","clearColor","Color4","FromHexString","name","target","Vector3","Zero","alpha","Math","PI","beta","upperBetaLimit","radius","lowerRadiusLimit","upperRadiusLimit","direction","Up","setDirectionToTarget","position","intensity","mapSize","shadowCasters","useBlurExponentialShadowMap","blurKernel","diffuseColor","Color3","thickness","tessellation","receiveShadows","LoadingScreen","loadingUIBackgroundColor","loadingUIText","Suzanne","canvasElement","useRef","engine","Engine","current","loadingScreen","setSize","SceneLoader","Load","suzanne","undefined","scene","camera","ArcRotateCamera","attachControl","HemisphericLight","diffuse","White","runRenderLoop","render","addEventListener","resize","ref","Clock","Scene","light1","light2","PointLight","wallMaterial","StandardMaterial","specularColor","Black","wall1","MeshBuilder","CreateBox","depth","material","wall2","floor","clockBody","CreateCylinder","diameter","rotation","longHand","setPivotPoint","shortHand","tick","now","Date","hour","getHours","minute","getMinutes","longHandRotation","shortHandRotation","x","setTimeout","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8c482ad.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Index() {\n  return (\n    <ul style={{ margin: '2rem' }}>\n      <li><Link to=\"/basic-geometries\">Basic Geometries</Link></li>\n      <li><Link to=\"/suzanne\">Suzanne</Link></li>\n      <li><Link to=\"/clock\">Clock</Link></li>\n    </ul>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport function useFullSize() {\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n\n  useEffect(() => {\n    setWidth(window.innerWidth)\n    setHeight(window.innerHeight)\n  }, [])\n\n  return { width, height }\n}\n","import React from 'react'\nimport { Engine, Scene } from 'react-babylonjs'\nimport { Vector3, Color3, Color4 } from '@babylonjs/core'\nimport { useFullSize } from '../hooks/full-size'\n\nexport default function BasicGeometries() {\n  const { width, height } = useFullSize()\n\n  return (\n    <Engine antialias adaptToDeviceRatio canvasId='babylon' width={width} height={height}>\n      <Scene clearColor={Color4.FromHexString('#12345678')}>\n        <arcRotateCamera\n          name=\"camera\"\n          target={Vector3.Zero()}\n          alpha={Math.PI / 3}\n          beta={Math.PI / 4}\n          upperBetaLimit={Math.PI / 2}\n          radius={10}\n          lowerRadiusLimit={5}\n          upperRadiusLimit={20}\n        />\n\n        <hemisphericLight name='light1' direction={Vector3.Up()} />\n        <directionalLight name='light2' setDirectionToTarget={[Vector3.Zero()]} direction={Vector3.Zero()} position={new Vector3(5, 10, 5)} intensity={0.5}>\n          <shadowGenerator mapSize={1024} shadowCasters={['box', 'sphere', 'torus']} useBlurExponentialShadowMap blurKernel={8} />\n        </directionalLight>\n\n        <box name='box' position={new Vector3(-1, 0.5, -1)}>\n          <standardMaterial name='boxMaterial' diffuseColor={Color3.FromHexString('#0b6623')} />\n        </box>\n        <sphere name='sphere' position={new Vector3(0, 0.5, 2)}>\n          <standardMaterial name='sphereMaterial' diffuseColor={Color3.FromHexString('#ff0000')} />\n        </sphere>\n        <torus name='torus' thickness={0.5} tessellation={32} position={new Vector3(2, 0.25, -1)}>\n          <standardMaterial name='torusMaterial' diffuseColor={Color3.FromHexString('#0000ff')} />\n        </torus>\n\n        <ground name='ground' width={10} height={10} receiveShadows>\n          <standardMaterial name='groundMaterial' diffuseColor={Color3.FromHexString('#3bb143')} />\n        </ground>\n      </Scene>\n    </Engine>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/suzanne.cad217e3.gltf\";","import { ILoadingScreen } from '@babylonjs/core'\n\nexport class LoadingScreen implements ILoadingScreen {\n  public loadingUIBackgroundColor: string = '#fff'\n  public loadingUIText: string = ''\n\n  public displayLoadingUI() {\n    return null\n  }\n\n  public hideLoadingUI() {\n    return null\n  }\n}\n","import React, { useEffect, useRef } from 'react'\nimport { Engine, SceneLoader, HemisphericLight, ArcRotateCamera, Vector3, Color3 } from '@babylonjs/core'\nimport '@babylonjs/loaders/glTF'\nimport suzanne from '../assets/gltf/suzanne.gltf'\nimport { LoadingScreen } from '../lib/loading-screen'\nimport { useFullSize } from '../hooks/full-size'\n\nexport default function Suzanne() {\n  const { width, height } = useFullSize()\n\n  const canvasElement = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    const engine = new Engine(canvasElement.current, true)\n    engine.loadingScreen = new LoadingScreen()\n    engine.setSize(width, height)\n\n    SceneLoader.Load(suzanne, undefined, engine, (scene) => {\n      const camera = new ArcRotateCamera(\"camera\", Math.PI / 2,  Math.PI / 2, 10, Vector3.Zero(), scene)\n      camera.lowerRadiusLimit = 2\n      camera.upperRadiusLimit = 20\n      camera.attachControl(canvasElement.current, true)\n\n      const light = new HemisphericLight(\"light\", new Vector3(-1, 1, 0), scene);\n      light.diffuse = Color3.White()\n\n      engine.runRenderLoop(() => {\n        scene.render()\n      })\n    })\n\n    window.addEventListener('resize', () => {\n      engine.resize()\n    })\n  })\n\n  return (\n    <canvas ref={canvasElement} />\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { Engine, Scene, HemisphericLight, PointLight, ArcRotateCamera, MeshBuilder, StandardMaterial, Vector3, Color3 } from '@babylonjs/core'\nimport { useFullSize } from '../hooks/full-size'\n\nexport default function Clock() {\n  const { width, height } = useFullSize()\n\n  const canvasElement = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    const engine = new Engine(canvasElement.current, true)\n    engine.setSize(width, height)\n\n    const scene = new Scene(engine)\n\n    const camera = new ArcRotateCamera(\"Camera\", -3 * Math.PI / 4, Math.PI / 3, 20, new Vector3(0, 0.5, 0), scene)\n    camera.lowerRadiusLimit = 20\n    camera.upperRadiusLimit = 20\n    camera.attachControl(canvasElement, true)\n\n    const light1 = new HemisphericLight(\"light1\", new Vector3(-2.5, 10, 0), scene)\n    light1.diffuse = Color3.White()\n    light1.intensity = 0.4\n\n    const light2 = new PointLight(\"light2\", new Vector3(-2.5, 5, 0), scene)\n    light2.diffuse = Color3.White()\n    light2.intensity = 0.5\n\n    const wallMaterial = new StandardMaterial('wallMaterial', scene)\n    wallMaterial.specularColor = Color3.Black()\n\n    const wall1 = MeshBuilder.CreateBox('wall1', { width: 5, height: 5, depth: 1 }, scene)\n    wall1.position = new Vector3(0, 2, 2)\n    wall1.material = wallMaterial\n\n    const wall2 = MeshBuilder.CreateBox('wall2', { width: 1, height: 5, depth: 5 }, scene);\n    wall2.position = new Vector3(2, 2, 0)\n    wall2.material = wallMaterial\n\n    const floor = MeshBuilder.CreateBox('floor', { width: 5, height: 1, depth: 5 }, scene);\n    floor.position = new Vector3(0, 0, 0)\n    floor.material = wallMaterial\n\n    const clockBody = MeshBuilder.CreateCylinder('clockBody', { diameter: 1, height: 0.1 }, scene)\n    clockBody.position = new Vector3(1.5, 3.0, -0.5)\n    clockBody.rotation = new Vector3(0, 0, Math.PI / 2)\n\n    const longHand = MeshBuilder.CreateCylinder('longHand', { diameter: 0.05, height: 0.5 }, scene)\n    longHand.position = new Vector3(1.4, 3.25, -0.5)\n    longHand.setPivotPoint(new Vector3(0, -0.25, 0))\n    longHand.rotation = new Vector3(Math.PI / 3, 0, 0)\n\n    const shortHand = MeshBuilder.CreateCylinder('shortHand', { diameter: 0.05, height: 0.3 }, scene)\n    shortHand.position = new Vector3(1.4, 3.15, -0.5)\n    shortHand.setPivotPoint(new Vector3(0, -0.15, 0))\n    shortHand.rotation = new Vector3(Math.PI / 3, 0, 0)\n\n    const tick = () => {\n      const now = new Date()\n      const hour = now.getHours()\n      const minute = now.getMinutes()\n\n      const longHandRotation = -2 * Math.PI * (minute / 60)\n      const shortHandRotation = -2 * Math.PI * (hour + (minute / 60)) / 12\n\n      longHand.rotation.x = longHandRotation\n      shortHand.rotation.x = shortHandRotation\n\n      setTimeout(tick, 1000)\n    }\n\n    tick()\n\n    engine.runRenderLoop(() => {\n      scene.render()\n    })\n\n    window.addEventListener('resize', () => {\n      engine.resize()\n    })\n  })\n\n  return (\n    <canvas ref={canvasElement} />\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Index from './pages/index'\nimport BasicGeometries from './pages/basic-geometries'\nimport Suzanne from './pages/suzanne'\nimport Clock from './pages/clock'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Index} />\n      <Route path=\"/basic-geometries\" component={BasicGeometries} />\n      <Route path=\"/suzanne\" component={Suzanne} />\n      <Route path=\"/clock\" component={Clock} />\n    </Switch>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}